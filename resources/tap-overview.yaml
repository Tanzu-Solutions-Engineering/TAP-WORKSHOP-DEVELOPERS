# #@ load("@ytt:data", "data")
---
apiVersion: learningcenter.tanzu.vmware.com/v1beta1
kind: Workshop
metadata:
  name: tapworkshop-developers
spec:
  title: TAP Workshop - Developers
  description: An introduction to the Tanzu Application Platform for Application Developers
  vendor: vmware.com
  difficulty: beginner
  duration: 100m
  url: https://github.com/Eknathreddy09/tap-multi-user
  content:
    image: tanzupartnerworkshop.azurecr.io/tapworkshop:v4
    files: github.com/Eknathreddy09/tap-multi-user?ref=main
  session:
    resources:
      memory: 3Gi
    env:
      # - name: GITEA_PASSWORD
      #   value: #@ data.values.gitea.adminPassword
      - name: VIEW_CLUSTER_DOMAIN
        value: workshop.tap.tanzupartnerdemo.com
      - name: TAP_REGISTRY_HOST
        value: tanzupartnerworkshop.azurecr.io
      - name: ACC_SERVER_URL
        value: https://accelerator.workshop.tap.tanzupartnerdemo.com
      # - name: HARBOR_USER
      #   value: #@ data.values.harbor.user
      # - name: HARBOR_PASSWORD
      #   value: #@ data.values.harbor.adminPassword
    namespaces:
      budget: custom
    applications:
      terminal:
        enabled: true
        layout: split
      console:
        enabled: true
        vendor: octant
      editor:
        enabled: true
      registry:
        enabled: false
#    objects:
#       # Permissions for workshop
#      - apiVersion: rbac.authorization.k8s.io/v1
#        kind: ClusterRoleBinding
#        metadata:
#          name: $(session_namespace)-workshop-read-crb
#          namespace: $(session_namespace)
#        roleRef:
#          apiGroup: rbac.authorization.k8s.io
#          kind: ClusterRole
#          name: k8s-reader
#        subjects:
#          - kind: ServiceAccount
#            namespace: $(workshop_namespace)
#            name: $(service_account)
#      - apiVersion: rbac.authorization.k8s.io/v1
#        kind: ClusterRoleBinding
#        metadata:
#          name: $(session_namespace)-workshop-rw-crb
#          namespace: $(session_namespace)
#        roleRef:
#          apiGroup: rbac.authorization.k8s.io
#          kind: ClusterRole
#          name: workshop-cluster-role
#        subjects:
#          - kind: ServiceAccount
#            namespace: $(workshop_namespace)
#            name: $(service_account)
#      # Permissions for session user
#      - apiVersion: rbac.authorization.k8s.io/v1
#        kind: ClusterRoleBinding
#        metadata:
#          name: $(session_namespace)-session-read-crb
#          namespace: $(session_namespace)
#        roleRef:
#          apiGroup: rbac.authorization.k8s.io
#          kind: ClusterRole
#          name: k8s-reader
#        subjects:
#          - kind: ServiceAccount
#            namespace: $(session_namespace)
#            name: default
#      - apiVersion: rbac.authorization.k8s.io/v1
#        kind: ClusterRoleBinding
#        metadata:
#          name: $(session_namespace)-session-rw-crb
#          namespace: $(session_namespace)
#        roleRef:
#          apiGroup: rbac.authorization.k8s.io
#          kind: ClusterRole
#          name: workshop-cluster-role
#        subjects:
#          - kind: ServiceAccount
#            namespace: $(session_namespace)
#            name: default
#            #   - apiVersion: v1
#            # kind: LimitRange
            #metadata:
            # name: resource-limits
            # spec:
            # limits:
            #- type: PersistentVolumeClaim
            # max:
            # storage: 10Gi
